apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'de.mannodermaus.android-junit5'
apply from: rootProject.file("app/codeQuality.gradle")
apply plugin: 'jacoco'
//apply plugin: 'io.fabric'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    dexOptions {
        maxProcessCount 4
        preDexLibraries false
        javaMaxHeapSize "4g"
    }

    dataBinding {
        enabled = true
    }

    defaultConfig {
        defaultPublishConfig 'debug'

        applicationId "com.piticlistudio.playednext"
        minSdkVersion 18
        targetSdkVersion 26
        testInstrumentationRunner "${applicationId}.runner.RxAndroidJUnitRunner"
        versionCode 1000
        // Major -> Millions, Minor -> Thousands, Bugfix -> Hundreds. E.g 1.3.72 == 1,003,072
        versionName '0.1.0'

        buildConfigField("String", "POKEAPI_API_URL",
                "\"${PokeapiApiUrl}\"")
        buildConfigField("String", "IGDB_API_URL", "\"${IGDBApiUrl}\"")
        buildConfigField("String", "IGDB_API_KEY", "\"${IGDBApiKey}\"")

        multiDexEnabled true
    }
    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            java.srcDirs += 'src/main/kotlin'
        }
        test {
            java.srcDirs += 'src/test/kotlin'
        }
        androidTest {
            java.srcDirs += 'src/androidTest/kotlin'
        }
    }

    lintOptions {
        textOutput "stdout"
        textReport true
        checkAllWarnings true
        warningsAsErrors true
        showAll true
        explainIssues true
        abortOnError false
        lintConfig file("$projectDir/lint.xml")
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'LICENSE.txt'
        exclude 'META-INF/license/LICENSE.base64.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/MANIFEST.MF'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
        }
    }
}

configurations.all {
    resolutionStrategy {
        force 'com.squareup.okio:okio:1.11.0'
        force "com.squareup.okhttp3:okhttp:3.5.0"
        force 'org.jetbrains.kotlin:kotlin-stdlib:1.1.2-3'
        force 'com.google.code.gson:gson:2.8.0'
    }
}

apply from: 'dependencies.gradle'

junitPlatform {
    jupiterVersion '5.0.0-M6'
    platformVersion '1.0.0-M6'
}

dependencies {
    implementation supportLibs
    kapt 'com.android.databinding:compiler:2.3.3'
    implementation networkLibs
    implementation rxJavaLibs

    implementation 'com.android.support:multidex:1.0.1'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation('com.github.bumptech.glide:okhttp3-integration:1.4.0') {
        exclude group: 'glide-parent'
    }
    //RxPermission for easy runtime permission management
    implementation 'com.tbruyelle.rxpermissions:rxpermissions:0.9.1@aar'
    implementation "com.jakewharton:butterknife:$versions.butterKnife"
    implementation 'com.jakewharton.timber:timber:4.5.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    implementation daggerLibs
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'
    //Required by Dagger2
    // APT dependencies
    kapt "com.jakewharton:butterknife-compiler:$versions.butterKnife"
    kapt daggerCompiler.values()
    kaptTest daggerCompiler.values()
    kaptAndroidTest daggerCompiler.values()

    testImplementation unitTestLibs
    androidTestImplementation androidTestsLibs
    testImplementation 'com.nhaarman:mockito-kotlin:1.5.0'
    testImplementation junitJupiter()
    //androidTestImplementation junitJupiter()
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    implementation "android.arch.persistence.room:runtime:$versions.archComp"
    implementation "android.arch.persistence.room:rxjava2:$versions.archComp"
    kapt "android.arch.persistence.room:compiler:$versions.archComp"

    implementation "android.arch.lifecycle:extensions:$versions.archComp"
    testImplementation "android.arch.core:core-testing:$versions.archComp"
    implementation "android.arch.lifecycle:reactivestreams:$versions.archComp"

    implementation picassoLibs
}

// Tests copy
task copyTestClasses(type: Copy) {
    from "build/tmp/kotlin-classes/debugUnitTest"
    into "build/intermediates/classes/debug"
}


// Log out test results to console
tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

afterEvaluate {
    testDebugUnitTest.dependsOn copyTestClasses
}
